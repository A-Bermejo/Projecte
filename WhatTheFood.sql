-- Crear BD --
CREATE DATABASE IF NOT EXISTS what_the_food;
USE what_the_food;

-- Crear tipus -- 

CREATE TABLE IF NOT EXISTS tipus (
    id_tipus INT NOT NULL AUTO_INCREMENT,
    nom_tipus varchar(45) NOT NULL,
    PRIMARY KEY (id_tipus)
);

-- Crear ingredientes -- 

CREATE TABLE IF NOT EXISTS ingredients (
    id_ingredient INT NOT NULL AUTO_INCREMENT, 
    nom_ingredient VARCHAR(255),
    nom_es_ingredient VARCHAR(255),
    nom_en_ingredient VARCHAR(255),
    tipus_id_ingredient INT NOT NULL,
    PRIMARY KEY (id_ingredient),
    CONSTRAINT FK_tipus_id_ingredient
    FOREIGN KEY (tipus_id_ingredient) REFERENCES tipus(id_tipus)
);

-- Crear continents -- 

CREATE TABLE IF NOT EXISTS continents(
    id_continent INT NOT NULL AUTO_INCREMENT,
    nom_continent VARCHAR(45) NOT NULL,
    PRIMARY KEY (id_continent)
);

INSERT INTO continents (nom_continent) VALUES 
('Europa'),
('Africa'),
('Asia'),
('America'),
('Oceania');

-- Crea paisos -- 

CREATE TABLE IF NOT EXISTS paisos(
    id_pais INT NOT NULL AUTO_INCREMENT, 
    codi_pais VARCHAR(4),
    nom_pais VARCHAR(255),
    nom_es_pais VARCHAR(255),
    nom_en_pais VARCHAR (255),
    continents_id_continent INT, 
    PRIMARY KEY (id_pais),
     CONSTRAINT FK_continents_id_continent
    FOREIGN KEY (continents_id_continent) REFERENCES continents(id_continent)
);

INSERT INTO paisos (codi_pais, nom_pais) VALUES 
('AF', 'Afganistan'),
('AX', 'Illes Aland'),
('AL', 'Albània'),
('DZ', 'Algèria'),
('AS', 'Samoa Americana'),
('AD', 'Andorra'),
('AO', 'Angola'),
('AI', 'Anguilla'),
('AQ', 'Antàrtida'),
('AG', 'Antigua i Barbuda'),
('AR', 'Argentina'),
('AM', 'Armènia'),
('AW', 'Aruba'),
('AU', 'Austràlia'),
('AT', 'Àustria'),
('AZ', 'Azerbaidjan'),
('BS', 'Bahames'),
('BH', 'Bahrain'),
('BD', 'Bangladesh'),
('BB', 'Barbados'),
('BY', 'Bielorússia'),
('BE', 'Bèlgica'),
('BZ', 'Belize'),
('BJ', 'Benín'),
('BM', 'Bermudes'),
('BT', 'Bhutan'),
('BO', 'Bolívia'),
('BQ', 'Bonaire, Sint Eustatius i Saba'),
('BA', 'Bòsnia i Hercegovina'),
('BW', 'Botswana'),
('BV', 'Illa Bouvet'),
('BR', 'Brasil'),
('IO', 'Territori britànic de l’oceà Índic'),
('BN', 'Brunei Darussalam'),
('BG', 'Bulgària'),
('BF', 'Burkina Faso'),
('BI', 'Burundi'),
('KH', 'Cambodja'),
('CM', 'Camerun'),
('CA', 'Canadà'),
('CV', 'Cap Verd'),
('KY', 'Illes Caiman'),
('CF', 'República Centreafricana'),
('TD', 'Txad'),
('CL', 'Xile'),
('CN', 'Xina'),
('CX', 'Illa de Nadal'),
('CC', 'Illes Cocos (Keeling)'),
('CO', 'Colòmbia'),
('KM', 'Comores'),
('CG', 'Congo'),
('CD', 'Congo, República Democràtica del Congo'),
('CK', 'Illes Cook'),
('CR', 'Costa Rica'),
('CI', 'Costa d Ivori'),
('HR', 'Croàcia'),
('CU', 'Cuba'),
('CW', 'Curaçao'),
('CY', 'Xipre'),
('CZ', 'República Txeca'),
('DK', 'Dinamarca'),
('DJ', 'Djibouti'),
('DM', 'Dominica'),
('DO', 'República Dominicana'),
('EC', 'Equador'),
('EG', 'Egipte'),
('SV', 'El Salvador'),
('GQ', 'Guinea Equatorial'),
('ER', 'Eritrea'),
('EE', 'Estònia'),
('ET', 'Etiòpia'),
('FK', 'Illes Malvines (Malvines)'),
('FO', 'Illes Faroe'),
('FJ', 'Fiji'),
('FI', 'Finlàndia'),
('FR', 'França'),
('GF', 'Guaiana Francesa'),
('PF', 'Polinèsia Francesa'),
('TF', 'Territoris australs francesos'),
('GA', 'Gabon'),
('GM', 'Gàmbia'),
('GE', 'Geòrgia'),
('DE', 'Alemanya'),
('GH', 'Ghana'),
('GI', 'Gibraltar'),
('GR', 'Grècia'),
('GL', 'Groenlàndia'),
('GD', 'Granada'),
('GP', 'Guadalupe'),
('GU', 'Guam'),
('GT', 'Guatemala'),
('GG', 'Guernsey'),
('GN', 'Guinea'),
('GW', 'Guinea-Bissau'),
('GY', 'Guyana'),
('HT', 'Haití'),
('HM', 'Illa Heard i Illes Mcdonald'),
('VA', 'Santa Seu (Estat de la Ciutat del Vaticà)'),
('HN', 'Hondures'),
('HK', 'Hong Kong'),
('HU', 'Hongria'),
('IS', 'Islàndia'),
('IN', 'Índia'),
('ID', 'Indonèsia'),
('IR', 'Iran, República Islàmica de'),
('IQ', 'Iraq'),
('IE', 'Irlanda'),
('IM', 'illa de l home'),
('IL', 'Israel'),
('IT', 'Itàlia'),
('JM', 'Jamaica'),
('JP', 'Japó'),
('JE', 'Jersey'),
('JO', 'Jordània'),
('KZ', 'Kazakhstan'),
('KE', 'Kenya'),
('KI', 'Kiribati'),
('KP', 'Corea, República Popular Democràtica de'),
('KR', 'Corea, República de'),
('XK', 'Kosovo'),
('KW', 'Kuwait'),
('KG', 'Kirguizistan'),
('LA', 'República Democràtica Popular Lao'),
('LV', 'Letònia'),
('LB', 'Líban'),
('LS', 'Lesotho'),
('LR', 'Libèria'),
('LY', 'Jamahiriya àrab líbia'),
('LI', 'Liechtenstein'),
('LT', 'Lituània'),
('LU', 'Luxemburg'),
('MO', 'Macau'),
('MK', 'Macedònia, antiga República Iugoslava de'),
('MG', 'Madagascar'),
('MW', 'Malawi'),
('MY', 'Malàisia'),
('MV', 'Maldives'),
('ML', 'Mali'),
('MT', 'Malta'),
('MH', 'Illes Marshall'),
('MQ', 'Martinica'),
('MR', 'Mauritània'),
('MU', 'Maurici'),
('YT', 'Mayotte'),
('MX', 'Mèxic'),
('FM', 'Micronèsia, Estats federats de'),
('MD', 'Moldàvia, República de'),
('MC', 'Mònaco'),
('MN', 'Mongòlia'),
('ME', 'Montenegro'),
('MS', 'Montserrat'),
('MA', 'Marroc'),
('MZ', 'Moçambic'),
('MM', 'Myanmar'),
('NA', 'Namíbia'),
('NR', 'Nauru'),
('NP', 'Nepal'),
('NL', 'Països Baixos'),
('AN', 'Antilles Holandeses'),
('NC', 'Nova Caledònia'),
('NZ', 'Nova Zelanda'),
('NI', 'Nicaragua'),
('NE', 'Níger'),
('NG', 'Nigèria'),
('NU', 'Niue'),
('NF', 'Illa Norfolk'),
('MP', 'Illes Mariannes del Nord'),
('NO', 'Noruega'),
('OM', 'Oman'),
('PK', 'Pakistan'),
('PW', 'Palau'),
('PS', 'Territori palestí, ocupat'),
('PA', 'Panamà'),
('PG', 'Papua Nova Guinea'),
('PY', 'Paraguai'),
('PE', 'Perú'),
('PH', 'Filipines'),
('PN', 'Pitcairn'),
('PL', 'Polònia'),
('PT', 'Portugal'),
('PR', 'Puerto Rico'),
('QA', 'Qatar'),
('RE', 'Reunió'),
('RO', 'Romania'),
('RU', 'Federació Russa'),
('RW', 'Rwanda'),
('BL', 'Sant Bartomeu'),
('SH', 'Santa Helena'),
('KN', 'Saint Kitts i Nevis'),
('LC', 'Santa Llúcia'),
('MF', 'Sant Martí'),
('PM', 'Saint Pierre i Miquelon'),
('VC', 'Sant Vicenç i les Granadines'),
('WS', 'Samoa'),
('SM', 'San Marino'),
('ST', 'Sao Tomé i Príncep'),
('SA', 'Aràbia Saudita'),
('SN', 'Senegal'),
('RS', 'Sèrbia'),
('CS', 'Sèrbia i Montenegro'),
('SC', 'Seychelles'),
('SL', 'Sierra Leone'),
('SG', 'Singapur'),
('SX', 'Sint Maarten'),
('SK', 'Eslovàquia'),
('SI', 'Eslovènia'),
('SB', 'Illes Salomó'),
('SO', 'Somàlia'),
('ZA', 'Sud-Àfrica'),
('GS', 'Geòrgia del Sud i les illes Sandwich del Sud'),
('SS', 'Sudan del Sud'),
('ES', 'Espanya'),
('LK', 'Sri Lanka'),
('SD', 'Sudan'),
('SR', 'Surinam'),
('SJ', 'Svalbard i Jan Mayen'),
('SZ', 'Swazilàndia'),
('SE', 'Suècia'),
('CH', 'Suïssa'),
('SY', 'República Àrab Siriana'),
('TW', 'Taiwan, província de Xina'),
('TJ', 'Tadjikistan'),
('TZ', 'Tanzània, República Unida de'),
('TH', 'Tailàndia'),
('TL', 'Timor-Leste'),
('TG', 'Anar'),
('TK', 'Tokelau'),
('TO', 'Tonga'),
('TT', 'Trinitat i Tobago'),
('TN', 'Tunísia'),
('TR', 'Turquia'),
('TM', 'Turkmenistan'),
('TC', 'Illes Turks i Caicos'),
('TV', 'Tuvalu'),
('UG', 'Uganda'),
('UA', 'Ucraïna'),
('AE', 'Emirats Àrabs Units'),
('GB', 'Regne Unit'),
('US', 'Estats Units'),
('UM', 'Illes perifèriques menors dels Estats Units'),
('UY', 'Uruguai'),
('UZ', 'Uzbekistan'),
('VU', 'Vanuatu'),
('VE', 'Veneçuela'),
('VN', 'Vietnam'),
('VG', 'Illes Verges, britàniques'),
('VI', 'Illes Verges, EUA'),
('WF', 'Wallis i Futuna'),
('EH', 'Sàhara Occidental'),
('YE', 'Iemen'),
('ZM', 'Zàmbia'),
('ZW', 'Zimbabwe');

-- Crear users --

CREATE TABLE IF NOT EXISTS usuaris(
    id_usuari INT NOT NULL AUTO_INCREMENT, 
    nom_usuari VARCHAR(255) NOT NULL,
    password VARCHAR(255),
    mail VARCHAR(255) NOT NULL,
    gmail_account TINYINT NOT NULL,
    PRIMARY KEY(id_usuari)
);

-- Crear receptas -- 

CREATE TABLE IF NOT EXISTS receptes (
    id_recepta INT NOT NULL AUTO_INCREMENT,
    nom_recepta VARCHAR(255),
    descripcio_recepta VARCHAR(255),
    temps TIME,
    video_recepta VARCHAR(255),
    paisos_id_pais INT,
    usuaris_id_usuari INT,
    validat_recepta TINYINT,
    PRIMARY KEY(id_recepta),
     CONSTRAINT FK_usuaris_id_usuari 
    FOREIGN KEY (usuaris_id_usuari) REFERENCES users(id_usuari),
     CONSTRAINT FK_paisos_id_pais 
    FOREIGN KEY (paisos_id_pais) REFERENCES paisos(id_pais)
);

 
CREATE TABLE IF NOT EXISTS ingredients_recepta(
    ingredients_id_ingredient INT,
    receptas_id_recepta INT,
    CONSTRAINT PK_ingredients_recepta PRIMARY KEY (ingredients_id_ingredient, receptas_id_recepta),

    CONSTRAINT FK_ingredients_id_ingredient 
    FOREIGN KEY (ingredients_id_ingredient) REFERENCES ingredients(id_ingredient),

    CONSTRAINT FK_receptas_id_recepta 
    FOREIGN KEY (receptas_id_recepta) REFERENCES receptes(id_recepta)
);


CREATE TABLE IF NOT EXISTS receptes_favorites(
    receptas_id_recepta INT,
    usuaris_id_usuari INT,
    CONSTRAINT PK_ingredients_recepta PRIMARY KEY (receptas_id_recepta,usuaris_id_usuari),

    CONSTRAINT FK_receptas_id_recepta_fav 
    FOREIGN KEY (receptas_id_recepta) REFERENCES receptes(id_recepta),

    CONSTRAINT FK_usuaris_id_usuari_fav 
    FOREIGN KEY (usuaris_id_usuari) REFERENCES users(id_usuari)
);